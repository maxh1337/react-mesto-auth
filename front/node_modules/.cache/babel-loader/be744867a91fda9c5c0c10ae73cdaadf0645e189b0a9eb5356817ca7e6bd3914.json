{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nconst initialStates = {\n  errors: {},\n  isInvalid: true\n};\nexport default function useValidatedForm() {\n  _s();\n  let initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [data, setData] = useState(initialData);\n  const [errors, setErrors] = useState(initialStates.errors);\n  const [isInvalid, setIsInvalid] = useState(initialStates.isInvalid);\n  function handleChange(name, value) {\n    setData(prevData => {\n      const newData = {\n        ...prevData,\n        [name]: value\n      };\n      const newDataEqualsInitial = JSON.stringify({\n        ...initialData,\n        ...newData\n      }) === JSON.stringify(initialData);\n      if (newDataEqualsInitial) {\n        setIsInvalid(true);\n      }\n      return newData;\n    });\n  }\n  function handleError(name, validationMessage) {\n    setErrors(prevData => ({\n      ...prevData,\n      [name]: validationMessage\n    }));\n  }\n  const reset = useCallback((e_, data) => {\n    setData(data !== null && data !== void 0 ? data : initialData);\n    setErrors(initialStates.errors);\n    setIsInvalid(initialStates.isInvalid);\n  }, [initialData]);\n  return {\n    registerForm() {\n      return {\n        isSubmitDisabled: isInvalid,\n        onReset: reset\n      };\n    },\n    register(name) {\n      var _data$name;\n      return {\n        value: (_data$name = data[name]) !== null && _data$name !== void 0 ? _data$name : '',\n        onChange: e => {\n          const input = e.currentTarget;\n          const {\n            value,\n            validationMessage\n          } = input;\n          handleChange(name, value);\n          handleError(name, value.length ? validationMessage : '');\n          const formValidity = input.closest('form').checkValidity();\n          setIsInvalid(!formValidity);\n        },\n        validationMessage: errors[name],\n        name\n      };\n    },\n    reset,\n    getData() {\n      return data;\n    },\n    isInvalid\n  };\n}\n_s(useValidatedForm, \"76sLRld1gQtFI6kcD5XAV5OIklE=\");","map":{"version":3,"names":["useCallback","useState","initialStates","errors","isInvalid","useValidatedForm","initialData","data","setData","setErrors","setIsInvalid","handleChange","name","value","prevData","newData","newDataEqualsInitial","JSON","stringify","handleError","validationMessage","reset","e_","registerForm","isSubmitDisabled","onReset","register","onChange","e","input","currentTarget","length","formValidity","closest","checkValidity","getData"],"sources":["C:/PET Projects/Курсовые/react-mesto-auth/src/hooks/useValidatedForm.js"],"sourcesContent":["import { useCallback, useState } from 'react';\r\n\r\nconst initialStates = {\r\n  errors: {},\r\n  isInvalid: true,\r\n};\r\n\r\nexport default function useValidatedForm(initialData = {}) {\r\n  const [data, setData] = useState(initialData);\r\n  const [errors, setErrors] = useState(initialStates.errors);\r\n  const [isInvalid, setIsInvalid] = useState(initialStates.isInvalid);\r\n\r\n  function handleChange(name, value) {\r\n    setData((prevData) => {\r\n      const newData = { ...prevData, [name]: value };\r\n\r\n      const newDataEqualsInitial =\r\n        JSON.stringify({ ...initialData, ...newData }) === JSON.stringify(initialData);\r\n      if (newDataEqualsInitial) {\r\n        setIsInvalid(true);\r\n      }\r\n\r\n      return newData;\r\n    });\r\n  }\r\n\r\n  function handleError(name, validationMessage) {\r\n    setErrors((prevData) => ({ ...prevData, [name]: validationMessage }));\r\n  }\r\n\r\n  const reset = useCallback(\r\n    (e_, data) => {\r\n      setData(data ?? initialData);\r\n      setErrors(initialStates.errors);\r\n      setIsInvalid(initialStates.isInvalid);\r\n    },\r\n    [initialData]\r\n  );\r\n\r\n  return {\r\n    registerForm() {\r\n      return {\r\n        isSubmitDisabled: isInvalid,\r\n        onReset: reset,\r\n      };\r\n    },\r\n    register(name) {\r\n      return {\r\n        value: data[name] ?? '',\r\n        onChange: (e) => {\r\n          const input = e.currentTarget;\r\n          const { value, validationMessage } = input;\r\n\r\n          handleChange(name, value);\r\n          handleError(name, value.length ? validationMessage : '');\r\n\r\n          const formValidity = input.closest('form').checkValidity();\r\n          setIsInvalid(!formValidity);\r\n        },\r\n        validationMessage: errors[name],\r\n        name,\r\n      };\r\n    },\r\n    reset,\r\n    getData() {\r\n      return data;\r\n    },\r\n    isInvalid,\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,aAAa,GAAG;EACpBC,MAAM,EAAE,CAAC,CAAC;EACVC,SAAS,EAAE;AACb,CAAC;AAED,eAAe,SAASC,gBAAgB,GAAmB;EAAA;EAAA,IAAlBC,WAAW,uEAAG,CAAC,CAAC;EACvD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACK,WAAW,CAAC;EAC7C,MAAM,CAACH,MAAM,EAAEM,SAAS,CAAC,GAAGR,QAAQ,CAACC,aAAa,CAACC,MAAM,CAAC;EAC1D,MAAM,CAACC,SAAS,EAAEM,YAAY,CAAC,GAAGT,QAAQ,CAACC,aAAa,CAACE,SAAS,CAAC;EAEnE,SAASO,YAAY,CAACC,IAAI,EAAEC,KAAK,EAAE;IACjCL,OAAO,CAAEM,QAAQ,IAAK;MACpB,MAAMC,OAAO,GAAG;QAAE,GAAGD,QAAQ;QAAE,CAACF,IAAI,GAAGC;MAAM,CAAC;MAE9C,MAAMG,oBAAoB,GACxBC,IAAI,CAACC,SAAS,CAAC;QAAE,GAAGZ,WAAW;QAAE,GAAGS;MAAQ,CAAC,CAAC,KAAKE,IAAI,CAACC,SAAS,CAACZ,WAAW,CAAC;MAChF,IAAIU,oBAAoB,EAAE;QACxBN,YAAY,CAAC,IAAI,CAAC;MACpB;MAEA,OAAOK,OAAO;IAChB,CAAC,CAAC;EACJ;EAEA,SAASI,WAAW,CAACP,IAAI,EAAEQ,iBAAiB,EAAE;IAC5CX,SAAS,CAAEK,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACF,IAAI,GAAGQ;IAAkB,CAAC,CAAC,CAAC;EACvE;EAEA,MAAMC,KAAK,GAAGrB,WAAW,CACvB,CAACsB,EAAE,EAAEf,IAAI,KAAK;IACZC,OAAO,CAACD,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAID,WAAW,CAAC;IAC5BG,SAAS,CAACP,aAAa,CAACC,MAAM,CAAC;IAC/BO,YAAY,CAACR,aAAa,CAACE,SAAS,CAAC;EACvC,CAAC,EACD,CAACE,WAAW,CAAC,CACd;EAED,OAAO;IACLiB,YAAY,GAAG;MACb,OAAO;QACLC,gBAAgB,EAAEpB,SAAS;QAC3BqB,OAAO,EAAEJ;MACX,CAAC;IACH,CAAC;IACDK,QAAQ,CAACd,IAAI,EAAE;MAAA;MACb,OAAO;QACLC,KAAK,gBAAEN,IAAI,CAACK,IAAI,CAAC,mDAAI,EAAE;QACvBe,QAAQ,EAAGC,CAAC,IAAK;UACf,MAAMC,KAAK,GAAGD,CAAC,CAACE,aAAa;UAC7B,MAAM;YAAEjB,KAAK;YAAEO;UAAkB,CAAC,GAAGS,KAAK;UAE1ClB,YAAY,CAACC,IAAI,EAAEC,KAAK,CAAC;UACzBM,WAAW,CAACP,IAAI,EAAEC,KAAK,CAACkB,MAAM,GAAGX,iBAAiB,GAAG,EAAE,CAAC;UAExD,MAAMY,YAAY,GAAGH,KAAK,CAACI,OAAO,CAAC,MAAM,CAAC,CAACC,aAAa,EAAE;UAC1DxB,YAAY,CAAC,CAACsB,YAAY,CAAC;QAC7B,CAAC;QACDZ,iBAAiB,EAAEjB,MAAM,CAACS,IAAI,CAAC;QAC/BA;MACF,CAAC;IACH,CAAC;IACDS,KAAK;IACLc,OAAO,GAAG;MACR,OAAO5B,IAAI;IACb,CAAC;IACDH;EACF,CAAC;AACH;AAAC,GA9DuBC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}