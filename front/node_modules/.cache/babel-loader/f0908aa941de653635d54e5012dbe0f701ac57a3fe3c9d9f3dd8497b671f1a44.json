{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const $api = async _ref => {\n  let {\n    url,\n    type = 'GET',\n    auth = true,\n    body\n  } = _ref;\n  // if (auth) {\n  //     const token = localStorage.getItem('token')\n  //     instance.defaults.headers.common['Authorization'] = `Bearer ${token}`\n  // }\n\n  let data;\n  try {\n    switch (type) {\n      case 'GET':\n      default:\n        data = await instance.get(url);\n        break;\n      case 'POST':\n        data = await instance.post(url, body);\n        break;\n      case 'PUT':\n        data = await instance.put(url, body);\n        break;\n      case 'DELETE':\n        data = await instance.delete(url, body);\n        break;\n    }\n    return data.data;\n  } catch (error) {\n    throw error.response && error.response.data ? error.response.data.message : error.message;\n  }\n};","map":{"version":3,"names":["axios","instance","create","baseURL","headers","$api","url","type","auth","body","data","get","post","put","delete","error","response","message"],"sources":["C:/PET Projects/Курсовые/react-mesto-auth/front/src/api/api.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:5000/api',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n})\r\n\r\nexport const $api = async ({ url, type = 'GET', auth = true, body }) => {\r\n    // if (auth) {\r\n    //     const token = localStorage.getItem('token')\r\n    //     instance.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n    // }\r\n\r\n    let data\r\n\r\n    try {\r\n        switch (type) {\r\n            case 'GET':\r\n            default:\r\n                data = await instance.get(url)\r\n                break\r\n            case 'POST':\r\n                data = await instance.post(url, body)\r\n                break\r\n            case 'PUT':\r\n                data = await instance.put(url, body)\r\n                break\r\n            case 'DELETE':\r\n                data = await instance.delete(url, body)\r\n                break\r\n        }\r\n        return data.data\r\n    } catch (error) {\r\n        throw error.response && error.response.data\r\n            ? error.response.data.message\r\n            : error.message\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAG,cAAoD;EAAA,IAA7C;IAAEC,GAAG;IAAEC,IAAI,GAAG,KAAK;IAAEC,IAAI,GAAG,IAAI;IAAEC;EAAK,CAAC;EAC/D;EACA;EACA;EACA;;EAEA,IAAIC,IAAI;EAER,IAAI;IACA,QAAQH,IAAI;MACR,KAAK,KAAK;MACV;QACIG,IAAI,GAAG,MAAMT,QAAQ,CAACU,GAAG,CAACL,GAAG,CAAC;QAC9B;MACJ,KAAK,MAAM;QACPI,IAAI,GAAG,MAAMT,QAAQ,CAACW,IAAI,CAACN,GAAG,EAAEG,IAAI,CAAC;QACrC;MACJ,KAAK,KAAK;QACNC,IAAI,GAAG,MAAMT,QAAQ,CAACY,GAAG,CAACP,GAAG,EAAEG,IAAI,CAAC;QACpC;MACJ,KAAK,QAAQ;QACTC,IAAI,GAAG,MAAMT,QAAQ,CAACa,MAAM,CAACR,GAAG,EAAEG,IAAI,CAAC;QACvC;IAAK;IAEb,OAAOC,IAAI,CAACA,IAAI;EACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACN,IAAI,GACrCK,KAAK,CAACC,QAAQ,CAACN,IAAI,CAACO,OAAO,GAC3BF,KAAK,CAACE,OAAO;EACvB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}