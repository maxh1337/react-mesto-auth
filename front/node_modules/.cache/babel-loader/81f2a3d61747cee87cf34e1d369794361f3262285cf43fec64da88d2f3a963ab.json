{"ast":null,"code":"var _jsxFileName = \"C:\\\\PET Projects\\\\\\u041A\\u0443\\u0440\\u0441\\u043E\\u0432\\u044B\\u0435\\\\react-mesto-auth\\\\front\\\\src\\\\components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport { $api } from '../../api/api';\nimport AddCardPopup from '../Popups/AddCardPopup/AddCardPopup';\nimport EditUserPhotoPopup from '../Popups/EditUserPhotoPopup/EditUserPhotoPopup';\nimport EditUserPopup from '../Popups/EditUserPopup/EditUserPopup';\nimport ImagePopup from '../Popups/ImagePopup/ImagePopup';\nimport SingleCard from './SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  _s();\n  let {\n    handleOnCardClick,\n    closeAllPopups,\n    selectedCard,\n    isPopupOpened,\n    isEditPhotoPopupOpened,\n    isEditProfilePopupOpened,\n    isAddCardPopupOpened\n  } = _ref;\n  const {\n    data,\n    refetch,\n    isSuccess\n  } = useQuery(['get cards'], () => $api({\n    url: `/cards`\n  }), {\n    refetchOnWindowFocus: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"elements__list\",\n        children: isSuccess && data.map((card, idx) => {\n          return /*#__PURE__*/_jsxDEV(SingleCard, {\n            name: card.name,\n            url: card.url,\n            onCardClick: () => handleOnCardClick(card),\n            refetch: refetch,\n            item: card._id\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      isVisible: isPopupOpened,\n      card: selectedCard,\n      onClick: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(EditUserPhotoPopup, {\n      isVisible: isEditPhotoPopupOpened,\n      onClick: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(EditUserPopup, {\n      isVisible: isEditProfilePopupOpened,\n      onClick: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AddCardPopup, {\n      isVisible: isAddCardPopupOpened,\n      onClick: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(Cards, \"gp4VbUQVR3Ont0rkr29su3wRrDU=\", false, function () {\n  return [useQuery];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useQuery","$api","AddCardPopup","EditUserPhotoPopup","EditUserPopup","ImagePopup","SingleCard","Cards","handleOnCardClick","closeAllPopups","selectedCard","isPopupOpened","isEditPhotoPopupOpened","isEditProfilePopupOpened","isAddCardPopupOpened","data","refetch","isSuccess","url","refetchOnWindowFocus","map","card","idx","name","_id"],"sources":["C:/PET Projects/Курсовые/react-mesto-auth/front/src/components/Cards/Cards.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useQuery } from 'react-query'\r\nimport { $api } from '../../api/api'\r\nimport AddCardPopup from '../Popups/AddCardPopup/AddCardPopup'\r\nimport EditUserPhotoPopup from '../Popups/EditUserPhotoPopup/EditUserPhotoPopup'\r\nimport EditUserPopup from '../Popups/EditUserPopup/EditUserPopup'\r\nimport ImagePopup from '../Popups/ImagePopup/ImagePopup'\r\nimport SingleCard from './SingleCard'\r\n\r\nconst Cards = ({ handleOnCardClick, closeAllPopups, selectedCard, isPopupOpened, isEditPhotoPopupOpened, isEditProfilePopupOpened, isAddCardPopupOpened}) => {\r\n\tconst { data, refetch, isSuccess } = useQuery(\r\n\t\t['get cards'],\r\n\t\t() =>\r\n\t\t\t$api({\r\n\t\t\t\turl: `/cards`,\r\n\t\t\t}),\r\n\t\t{\r\n\t\t\trefetchOnWindowFocus: false,\r\n\t\t}\r\n\t)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className=\"elements\">\r\n\t\t\t\t<ul className=\"elements__list\">\r\n\t\t\t\t\t{isSuccess &&\r\n\t\t\t\t\t\tdata.map((card, idx) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<SingleCard\r\n\t\t\t\t\t\t\t\t\tname={card.name}\r\n\t\t\t\t\t\t\t\t\turl={card.url}\r\n\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\tonCardClick={() => handleOnCardClick(card)}\r\n\t\t\t\t\t\t\t\t\trefetch={refetch}\r\n\t\t\t\t\t\t\t\t\titem={card._id}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</section>\r\n\t\t\t<ImagePopup\r\n\t\t\t\tisVisible={isPopupOpened}\r\n\t\t\t\tcard={selectedCard}\r\n\t\t\t\tonClick={closeAllPopups}\r\n\t\t\t/>\r\n\t\t\t<EditUserPhotoPopup\r\n\t\t\t\tisVisible={isEditPhotoPopupOpened}\r\n\t\t\t\tonClick={closeAllPopups}\r\n\t\t\t/>\r\n\t\t\t<EditUserPopup\r\n\t\t\t\tisVisible={isEditProfilePopupOpened}\r\n\t\t\t\tonClick={closeAllPopups}\r\n\t\t\t/>\r\n\t\t\t<AddCardPopup isVisible={isAddCardPopupOpened} onClick={closeAllPopups} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Cards\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,kBAAkB,MAAM,iDAAiD;AAChF,OAAOC,aAAa,MAAM,uCAAuC;AACjE,OAAOC,UAAU,MAAM,iCAAiC;AACxD,OAAOC,UAAU,MAAM,cAAc;AAAA;AAAA;AAErC,MAAMC,KAAK,GAAG,QAA+I;EAAA;EAAA,IAA9I;IAAEC,iBAAiB;IAAEC,cAAc;IAAEC,YAAY;IAAEC,aAAa;IAAEC,sBAAsB;IAAEC,wBAAwB;IAAEC;EAAoB,CAAC;EACvJ,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGjB,QAAQ,CAC5C,CAAC,WAAW,CAAC,EACb,MACCC,IAAI,CAAC;IACJiB,GAAG,EAAG;EACP,CAAC,CAAC,EACH;IACCC,oBAAoB,EAAE;EACvB,CAAC,CACD;EACD,oBACC;IAAA,wBACC;MAAS,SAAS,EAAC,UAAU;MAAA,uBAC5B;QAAI,SAAS,EAAC,gBAAgB;QAAA,UAC5BF,SAAS,IACTF,IAAI,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;UACvB,oBACC,QAAC,UAAU;YACV,IAAI,EAAED,IAAI,CAACE,IAAK;YAChB,GAAG,EAAEF,IAAI,CAACH,GAAI;YAEd,WAAW,EAAE,MAAMV,iBAAiB,CAACa,IAAI,CAAE;YAC3C,OAAO,EAAEL,OAAQ;YACjB,IAAI,EAAEK,IAAI,CAACG;UAAI,GAHVF,GAAG;YAAA;YAAA;YAAA;UAAA,QAIP;QAEJ,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACI,eACV,QAAC,UAAU;MACV,SAAS,EAAEX,aAAc;MACzB,IAAI,EAAED,YAAa;MACnB,OAAO,EAAED;IAAe;MAAA;MAAA;MAAA;IAAA,QACvB,eACF,QAAC,kBAAkB;MAClB,SAAS,EAAEG,sBAAuB;MAClC,OAAO,EAAEH;IAAe;MAAA;MAAA;MAAA;IAAA,QACvB,eACF,QAAC,aAAa;MACb,SAAS,EAAEI,wBAAyB;MACpC,OAAO,EAAEJ;IAAe;MAAA;MAAA;MAAA;IAAA,QACvB,eACF,QAAC,YAAY;MAAC,SAAS,EAAEK,oBAAqB;MAAC,OAAO,EAAEL;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACxE;AAEL,CAAC;AAAA,GA9CKF,KAAK;EAAA,QAC2BP,QAAQ;AAAA;AAAA,KADxCO,KAAK;AAgDX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}